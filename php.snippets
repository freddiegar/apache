global !p
def autocomplete(t, options):
	if t:
		options =  [ m[len(t):] for m in options if m.startswith(t) ]
	if len(options) == 1:
		return options[0]

	return '|'.join(options)

def proptypes():
	return ['string', 'int', 'bool', 'float', 'DateTimeInterface', 'array']

def retutypes():
	return proptypes() + ['void']

def functypes():
	return ['public', 'protected', 'private']

endglobal

snippet nn "Get file name"
`!v sniphpets#basename()`
endsnippet

snippet pp "Define Property" b
$1`!p snip.rv=autocomplete(t[1], functypes())` $2`!p snip.rv=autocomplete(t[2], proptypes())` $$0;
endsnippet

snippet pc "Define Construct Property" b
$this->$1 = $$1;$0
endsnippet

snippet pt "Define Test Property" b
$$1 = '::$1::';$0
endsnippet

snippet pf "Define Fake Property" b
'::$1::'$0
endsnippet

snippet pa "Define Assert Property" b
$this->assertEquals($$1, $$2->$1());$0
endsnippet

snippet fis "Function Interface Set" b
public function set${1/^([a-z]){1}/\u$1/}($2`!p snip.rv=autocomplete(t[2], proptypes())` $$1): void;
endsnippet

snippet fig "Function Interface Get" b
public function $1(): $2`!p snip.rv=autocomplete(t[2], proptypes())`;
endsnippet

snippet fic "Function Interface Construct" b
public function __construct($0);
endsnippet

snippet fix "Function Interface X" b
public function $1($2): $3`!p snip.rv=autocomplete(t[3], retutypes())`;
endsnippet

snippet fif "Function Interface Full" b
public function $1(): $2`!p snip.rv=autocomplete(t[2], proptypes())`;

public function set${1/^([a-z]){1}/\u$1/}($2 $$1): void;
endsnippet

snippet ffs "Setter Function" b
public function set${1/^([a-z]){1}/\u$1/}($2`!p snip.rv=autocomplete(t[2], proptypes())` $$1): void
{
    $this->$1 = $1;
}$0
endsnippet

snippet ffg "Getter Function" b
public function $1(): $2`!p snip.rv=autocomplete(t[2], proptypes())`
{
    return $this->$1;
}$0
endsnippet

snippet ffc "Function Construct" b
public function __construct($1 $$2$3)
{
    $this->$2 = $$2;$0
}
endsnippet

snippet ffx "Function X" b
public function $1($2): $3`!p snip.rv=autocomplete(t[3], retutypes())`;
{
    $0
}
endsnippet

snippet fff "Function Full" b
$3`!p snip.rv=autocomplete(t[3], functypes())` $2 $$1;

public function $1(): $2
{
    return $this->$1;
}

public function set${1/^([a-z]){1}/\u$1/}($2 $$1): void
{
    $this->$1 = $1;
}$0
endsnippet

snippet fft "Function Test" b
public function test$1($2): void
{
    $0
}
endsnippet

snippet ffp "Use Data Provider" b
/**
 * @dataProvider get$0
 */
endsnippet

snippet ffd "Function Data Provider" b
public function get$1(): array
{
    return [
        [$0],
    ];
}
endsnippet

